@startuml

abstract class DefaultEntity {
  id: Long
  dataCriacao: DateTime
  dataAtualizacao: DateTime
  usuarioCriacao: String
  usuarioAtualizacao: String
  versao: Integer
  ativo: Boolean
}

abstract class Pessoa {
  nome: String
  email: String
  senha: String
  ativo: Boolean
}

class PessoaFisica {
  cpf: String
  rg: String
  dataNascimento: Date
}

class PessoaJuridica {
  cnpj: String
  inscricaoEstadual: String
  razaoSocial: String
}

class Cliente {
  dataCadastro: Date
}

class UsuarioAdministrador {
  cargo: String
  departamento: String
  nivelAcesso: String
}

class Endereco {
  logradouro: String
  numero: String
  complemento: String
  bairro: String
  cidade: String
  estado: String
  cep: String
  pais: String
  enderecoEntrega: Boolean
  enderecoPrincipal: Boolean
}

class Telefone {
  ddd: Integer
  numero: String
  tipo: String
  telefonePrincipal: Boolean
}

class Fabricante {
  nome: String
  cnpj: String
  telefone: String
  email: String
}

class Agrotoxico {
  nome: String
  descricao: String
  codigoBarras: String
  tipoFormulacao: TipoFormulacao
}

class Fornecedor {
  nome: String
  cnpj: String
  telefone: String
  email: String
  website: String
}

class Estoque {
  quantidade: Integer
  dataEntrada: Date
  dataValidade: Date
  lote: String
  precoCompra: Double
  precoVenda: Double
}

class LogAcesso {
  dataHora: DateTime
  enderecoIp: String
  tipoLog: TipoLog
  descricao: String
  navegador: String
  sistemaOperacional: String
  usuario: String
}

class LogAuditoria {
  dataHora: DateTime
  entidade: String
  operacao: TipoOperacao
  entidadeId: Long
  valorAntigo: String
  valorNovo: String
  usuario: String
}

class LogErro {
  dataHora: DateTime
  mensagem: String
  stackTrace: String
  classe: String
  metodo: String
  linha: Integer
  severidade: NivelSeveridade
}

enum TipoFormulacao {
  SOLUCAO
  SUSPENSAO
  EMULSAO
  GRANULADO
}

enum TipoLog {
  INFO
  ALERTA
  ERRO
  DEBUG
  ACESSO
}

enum TipoOperacao {
  INSERCAO
  ATUALIZACAO
  EXCLUSAO
  CONSULTA
}

enum NivelSeveridade {
  BAIXO
  REGULAR
  ALTO
  CRITICO
  ERRO
}

' Herança de DefaultEntity
DefaultEntity <|-- Pessoa
DefaultEntity <|-- Endereco
DefaultEntity <|-- Telefone
DefaultEntity <|-- Fabricante
DefaultEntity <|-- Agrotoxico
DefaultEntity <|-- Fornecedor
DefaultEntity <|-- Estoque
DefaultEntity <|-- LogAcesso
DefaultEntity <|-- LogAuditoria
DefaultEntity <|-- LogErro

' Herança de Pessoa
Pessoa <|-- PessoaFisica
Pessoa <|-- PessoaJuridica
PessoaFisica <|-- Cliente
PessoaJuridica <|-- Cliente
PessoaJuridica <|-- UsuarioAdministrador

Pessoa "1" *-- "*" Endereco : possui >
Pessoa "1" *-- "*" Telefone : possui >
Fabricante "1" o-- "*" Agrotoxico : produz >
Fornecedor "1" ..> "*" Estoque : fornece >
Agrotoxico "1" -- "*" Estoque : referencia >

UsuarioAdministrador "1" o-- "*" LogAcesso : gera >
UsuarioAdministrador "1" o-- "*" LogAuditoria : produz >
UsuarioAdministrador "1" ..> "*" LogErro : registra >

' Notas
note top of Cliente
  Cliente pode ser Pessoa Física ou Jurídica
  Acesso restrito: apenas CRUD da própria conta
end note

note top of UsuarioAdministrador
  Usuário Administrador é sempre Pessoa Jurídica
  Acesso completo: CRUD de agrotoxicos, estoque,
  fabricantes e fornecedores.
end note

note top of DefaultEntity
  Classe base para todas as entidades
  Contém campos de auditoria e controle de versão
end note

note right of LogAuditoria
  Registra alterações nas entidades
  com informações de antes e depois
end note

@enduml